<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming, competitive_programming, c++ on</title><link>https://zebra314.github.io/quartz/tags/programming-competitive_programming-c++/</link><description>Recent content in programming, competitive_programming, c++ on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://zebra314.github.io/quartz/tags/programming-competitive_programming-c++/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://zebra314.github.io/quartz/notes/programming/Basic-programming/Algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zebra314.github.io/quartz/notes/programming/Basic-programming/Algorithms/</guid><description>十進位轉二進位 1 2 3 4 5 string ans_str // 不能用int 轉換完的二進位數字很可能裝不下  while (input != 0){ // input 可以用int  ans_str = ( input % 2 == 0 ?</description></item><item><title/><link>https://zebra314.github.io/quartz/notes/programming/Basic-programming/C++-Syntax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zebra314.github.io/quartz/notes/programming/Basic-programming/C++-Syntax/</guid><description>Input 優化 1 2 3 4 5 6 int main() { ios::sync_with_stdio(false); cin.tie(0); /*do something...*/ } 種類 1 2 3 4 5 6 7 8 9 10 11 12 string str; char cha; cin&amp;gt;&amp;gt;str&amp;gt;&amp;gt;cha; getline(cin,str); getline(cin,char); cin.</description></item><item><title/><link>https://zebra314.github.io/quartz/notes/programming/Basic-programming/Data-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zebra314.github.io/quartz/notes/programming/Basic-programming/Data-structure/</guid><description/></item><item><title/><link>https://zebra314.github.io/quartz/notes/programming/Basic-programming/Dynamic-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zebra314.github.io/quartz/notes/programming/Basic-programming/Dynamic-Programming/</guid><description>Top-down easier to write memoization , usually store in hash map recursion Bottom-up faster runtime tabulation iteration The characteristic of the problems ask for the optimum value minimum, maximum longest decisions depend on earlier decisions to distinguish to use greedy or DP</description></item><item><title/><link>https://zebra314.github.io/quartz/notes/programming/Basic-programming/GPE-info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zebra314.github.io/quartz/notes/programming/Basic-programming/GPE-info/</guid><description>Two star Power Strings All in All Power Crisis Uncompress Correct Move Divisors Interpreting Control Sequences Big Mod Intersecting Lines Equation Elation Prime Cuts Fibonacci Freeze Rails Prime Land Frogger Tree Recovery Team Queue Oil Deposits DNA Sorting The die is cast Coin Change Dropping Balls Goldbach&amp;rsquo;s Conjecture (II) How Many Knights Lakes Exponentiation Page Hopping Brick Wall Patterns Spreading The News Circular Safe Salutations Product of digits Show the Sequence A DP Problem Sum of Consecutive Prime Numbers Password Prime Gap Sum of MSLCM Need for Speed Garden of Eden Center of Masses Bicoloring Carmichael Numbers All Roads Lead Where?</description></item></channel></rss>